// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model about {
  id          Int     @id @default(autoincrement())
  heading     String
  description String
  videos_link String?
  image       String
  created_on  String
}

model user {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  mobile       String?
  alter_mobile String?
  created_on   DateTime
  updated_on   String?
  address      String
  status       Int?
  Cart         cartItem[]
}

model products {
  p_id            Int                @id @default(autoincrement())
  product_model_name      String?
  product_model_number    String?
  product_color_          frame_color?  @relation(fields:[product_color], references:[id])
  product_color           Int?
  capacity                String?
  use_for                 String?
  lens_matrial            String?
  shape_                  Product_shape?     @relation(fields:[shape], references:[id])
  shape                   Int?
  style_                  style?  @relation(fields:[style], references:[id])
  style                   Int?
  dimensions              String?
  country_of_origin       String?
  row_metrial_source_from String?
  material                String?
  show_lens_list          Int?
  warranty                String?
  product_description     String?
  product_price           String?
  discounted_price        Int?
  product_images          String?
  image                   String?
  offer                   String?
  size_                   Size? @relation(fields:[size], references:[id])
  size                        Int?
  bought                  String?
  // rating                  Int?
  frame_width             String?
  temple_length           String?
  lens_height             String?
  coupon_code             String?
  coupon_amount           Int?
  stokke                  Int?
  product_url             String?
  seo_title               String?
  keyword                 String?
  created_on              DateTime?
  updated_on              DateTime?
  status                  Int?
  productBrand            product_brands     @relation(fields: [productBrandId], references: [products_brand_id])
  productBrandId          Int
  productCategories       product_categories @relation(fields: [productCategoriesId], references: [products_categories_id])
  productCategoriesId     Int
  Cart                    cartItem[]
}
model Size {
   id          Int @id @default(autoincrement())
  name        String
  product     products[]
}
model Product_shape {
  id          Int @id @default(autoincrement())
  name        String
  image       String
  product     products[]
}
 model frame_color {
   id Int @id @default(autoincrement())
   name String
   product products[]
 }
  model style {
    id        Int @id @default(autoincrement())
    name      String
    url       String
    product   products[]
  }

model product_brands {
  products_brand_id      Int                @id @default(autoincrement())
  brand_name             String?
  categories_id          product_categories @relation(fields: [products_categories_id], references: [products_categories_id])
  products_categories_id Int
  created_on             String?
  updated_on             String?
  url                    String?
  products               products[]
  lenses                 lenses[]
}

model product_categories {
  products_categories_id Int              @id @default(autoincrement())
  name                   String?
  image                  String?
  position               Int?
  created_on             String?
  updated_on             String?
  status                 Int              @default(1)
  url                    String?
  products               products[]
  brand                  product_brands[]
  lenses                 lenses[]
}

model lenses {
  id                                Int                @id @default(autoincrement())
  heading                           String
  price                             String
  warranty_period                   Int
  thickness                         String
  power_range                       String
  blue_light_blocker                Int?
  anti_scratch_coating              Int?
  both_side_anti_glare_coating      Int?
  both_side_anti_reflective_coating Int?
  uv_protection                     Int?
  water_and_dust_repellent          Int?
  breakage_and_crack_resistant      Int?
  offer                             String
  categories_id                     product_categories @relation(fields: [products_categories_id], references: [products_categories_id])
  products_categories_id            Int
  brand_id                          product_brands     @relation(fields: [products_brand_id], references: [products_brand_id])
  products_brand_id                 Int
  power_type                        Int
  created_at                        String
  updated_at                        String?
  lenses                            cartItem[]
}



model cartItem {
  id         Int       @id @default(autoincrement())
  product_Id  products? @relation(fields: [productId], references: [p_id])
  productId       Int?
  price      String?
  qty_frame  Int       @default(0)
  date       DateTime  @default(now()) @updatedAt
  l_id       Int?
  lId        lenses?   @relation(fields: [l_id], references: [id])
  lensePrice String?
  qty_lenses Int       @default(0)
  user       user?     @relation(fields: [user_id], references: [id])
  user_id    Int?
}

model Contact {
  id          Int       @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String
  phoneNo     String
  address     String
  city        String
  state       String
  zipCode     String
  country     String
}




// model orderItem {
//   id        Int       @id @default(autoincrement())
//   pId       products? @relation(fields: [p_id], references: [products_id])
//   p_id      Int?
//   date      DateTime  @default(now()) @updatedAt
//   user_ip   String
//   l_id      Int?
//   lId       lenses?   @relation(fields: [l_id], references: [id])
//   user      user?     @relation(fields: [user_id], references: [id])
//   user_id   Int?      @unique
//   sessionId Int
// }

// model orderDetails {
//   id             Int            @id @default(autoincrement())
//   user           user?          @relation(fields: [user_id], references: [id])
//   user_id        Int?           @unique
//   total          Int
//   paymentDeatils paymentDeatils @relation(fields: [paymentId], references: [id])
//   paymentId      Int
// }

// model paymentDeatils {
//   id           Int            @id @default(autoincrement())
//   orderdetails orderDetails[]
//   amount       Int
//   provider     String
//   status       String
// }


